#include <stdio.h>
#include <stdlib.h>
 
struct Node {
    int data;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

void insertAtBeginning(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
        newNode->next = newNode; 
    } else {
        newNode->next = *head;
        *head = newNode;
    }
}

void deleteAtBeginning(struct Node** head) {
    if (*head == NULL) {
        printf("Linked list is empty.\n");
        return;
    }
    struct Node* temp = *head;
    if (*head->next == *head) {
        *head = NULL;
    } else {
        *head = (*head)->next;
        free(temp);
    }
}

void displayList(struct Node* head) {
    struct Node* temp = head;
    do {
        printf("%d ", temp->data);
        temp = temp->next;
    } while (temp != head);
    printf("\n");
}

int main() {
    struct Node* head = NULL;

    insertAtBeginning(&head, 7);
    insertAtBeginning(&head, 1);
    insertAtBeginning(&head, 3);

    printf("Linked List: ");
    displayList(head);

    deleteAtBeginning(&head);

    printf("Linked List after deletion: ");
    displayList(head);

    return 0;
}
