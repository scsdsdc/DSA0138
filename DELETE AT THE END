#include <stdio.h>
#include <stdlib.h>


typedef struct Node {
    int data;
    struct Node* next;
} Node;

Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    if (!newNode) {
        printf("Memory error\n");
        return NULL;
    }
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}
void push(Node** top, int data) {
    Node* newNode = createNode(data);
    if (*top) {
        newNode->next = *top;
    }
    *top = newNode;
}

int pop(Node** top) {
    if (*top == NULL) {
        printf("Stack is empty\n");
        return -1;
    }
    int data = (*top)->data;
    Node* temp = *top;
    *top = (*top)->next;
    free(temp);
    return data;
}
void display(Node* top) {
    while (top) {
        printf("%d ", top->data);
        top = top->next;
    }
    printf("\n");
}

int main() {
    Node* top = NULL;

    push(&top, 1);
    push(&top, 2);
    push(&top, 3);
    push(&top, 4);

    printf("Stack: ");
    display(top);

    printf("Popped: %d\n", pop(&top));
    printf("Popped: %d\n", pop(&top));
    printf("Popped: %d\n", pop(&top));

  
    printf("Stack: ");
    display(top);

    return 0;
}
