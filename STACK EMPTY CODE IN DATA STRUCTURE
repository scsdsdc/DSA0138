#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

typedef struct {
    int data[MAX_SIZE];
    int top;
} Stack;

void initialize(Stack *s) {
    s->top = -1;
}

int isEmpty(Stack *s) {
    return s->top == -1;
}

int isFull(Stack *s) {
    return s->top == MAX_SIZE - 1;
}

void push(Stack *s, int x) {
    if (isFull(s)) {
        printf("Error: Stack Overflow\n");
        return;
    }
    s->data[++s->top] = x;
}

int pop(Stack *s) {
    if (isEmpty(s)) {
        printf("Error: Stack Underflow\n");
        return -1;
    }
    return s->data[s->top--];
}

int main() {
    Stack s;
    initialize(&s);
    
    push(&s, 10);
    push(&s, 20);
    push(&s, 30);
    
    printf("Top element: %d\n", s.data[s.top]);
    
    printf("Popped element: %d\n", pop(&s));
    
    if (isEmpty(&s)) {
        printf("Stack is empty\n");
    } else {
        printf("Stack is not empty\n");
    }
    
    return 0;
}
